<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>InfoSec Blog</title>
    <link>http://mislusnys.github.io/</link>
    <description>Recent content on InfoSec Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 04 May 2019 13:37:33 -0100</lastBuildDate>
    
	<atom:link href="http://mislusnys.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>HTB BigHead Exploit - Small Buffer Exploit without Egghunter</title>
      <link>http://mislusnys.github.io/post/htb-bighead/</link>
      <pubDate>Sat, 04 May 2019 13:37:33 -0100</pubDate>
      
      <guid>http://mislusnys.github.io/post/htb-bighead/</guid>
      <description>&lt;p&gt;This post will demonstrate one of a few ways to deal with small buffer space when exploiting buffer overflows on Windows. This is not a full writeup of the BigHead machine and only demonstrates the initial buffer overflow exploit using the LoadLibrary function.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Flare-On Reversing Challenges 2016</title>
      <link>http://mislusnys.github.io/post/flareon3/</link>
      <pubDate>Sun, 06 Nov 2016 18:56:21 +0100</pubDate>
      
      <guid>http://mislusnys.github.io/post/flareon3/</guid>
      <description>&lt;p&gt;This autumn FireEye&amp;rsquo;s FLARE team hosted its third annual Flare-On Challenge.
Flare-On is purely reverse engineering based CTF targeting malware analysts and
security professionals. This year there were ten challenges and even though
all very different, most of them were crypto related.&lt;/p&gt;

&lt;p&gt;This post will present my solutions to all the challenges.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Resources</title>
      <link>http://mislusnys.github.io/resources/</link>
      <pubDate>Tue, 09 Aug 2016 19:03:56 +0200</pubDate>
      
      <guid>http://mislusnys.github.io/resources/</guid>
      <description> Penetration Testing Resources  Pentester Tips - Penetration Testing Tips, Skills Matrix PwnWiki - collection TTPs (tools, tactics, and procedures) for what to do after access has been gained.  CTFs  Wechall - wargames, challenges CTF Writeups - CTF writeups Pentestit Lab - lab to practice pentesting skills  Exploit Development and Reverse Engineering Links and Lists  Awesome Penetration Testing - Pentest resources Cheat Sheets - several cheat sheets  </description>
    </item>
    
    <item>
      <title>Protostar Format String (Levels 0-4)</title>
      <link>http://mislusnys.github.io/post/2016-06-26-protostar-format-string-levels/</link>
      <pubDate>Sun, 26 Jun 2016 03:10:18 -0400</pubDate>
      
      <guid>http://mislusnys.github.io/post/2016-06-26-protostar-format-string-levels/</guid>
      <description>&lt;p&gt;Protostar is a Linux VM with a series of exploitation exercises. It has five sections: stack overflows, format strings, heap overflows,
network code and 3 final levels with combinations of all the above.&lt;/p&gt;

&lt;p&gt;This post contains solutions for the five format string levels.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Protostar Exploit Exercises - Stack Levels</title>
      <link>http://mislusnys.github.io/post/2016-05-20-protostar-exploit-exercises/</link>
      <pubDate>Sun, 19 Jun 2016 13:37:33 -0400</pubDate>
      
      <guid>http://mislusnys.github.io/post/2016-05-20-protostar-exploit-exercises/</guid>
      <description>&lt;p&gt;The Protostar VM is the next progression step after Nebula (Exploit Exercises).&lt;/p&gt;

&lt;p&gt;Protostar introduces the following in a friendly way:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Network programming&lt;/li&gt;
&lt;li&gt;Byte order&lt;/li&gt;
&lt;li&gt;Handling sockets&lt;/li&gt;
&lt;li&gt;Stack overflows&lt;/li&gt;
&lt;li&gt;Format strings&lt;/li&gt;
&lt;li&gt;Heap overflows&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The above is introduced in a simple way, starting with simple memory corruption and modification, function redirection, and finally executing custom shellcode.&lt;/p&gt;

&lt;p&gt;In this post I will detail my attempt at solving the stack levels of this VM.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Nebula Exploit Exercises</title>
      <link>http://mislusnys.github.io/post/2016-05-01-nebula-exploit-exercises/</link>
      <pubDate>Mon, 02 May 2016 04:28:35 +0000</pubDate>
      
      <guid>http://mislusnys.github.io/post/2016-05-01-nebula-exploit-exercises/</guid>
      <description>&lt;p&gt;Ever since I stumbled upon exploit exercises website - I wanted to try the challenges. They have three main exploitable VMs: Nebula, Protostar and Fusion.
The order represents the suggested progression path.&lt;/p&gt;

&lt;p&gt;The welcome page reads:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;exploit-exercises.com provides a variety of virtual machines, documentation and challenges&lt;/em&gt;
&lt;em&gt;that can be used to learn about a variety of computer&lt;/em&gt;
&lt;em&gt;security issues such as privilege escalation, vulnerability analysis, exploit development,&lt;/em&gt;
&lt;em&gt;debugging, reverse engineering, and general cyber security issues.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Here, I wrote down some of the findings while exploring the Nebula VM.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>OWASP Top 10 in Mutillidae (Part2)</title>
      <link>http://mislusnys.github.io/post/2015-02-06-owasp-top-10-in-mutillidae-part-2/</link>
      <pubDate>Fri, 06 Feb 2015 04:29:36 +0000</pubDate>
      
      <guid>http://mislusnys.github.io/post/2015-02-06-owasp-top-10-in-mutillidae-part-2/</guid>
      <description>&lt;p&gt;This post is continuation from &lt;a href=&#34;http://mislusnys.github.io/blog/2015/02/03/owasp-top-10-in-mutillidae-part1&#34;&gt;previous post&lt;/a&gt;. We explore less common, however, still potentially very dangerous &lt;em&gt;OWASP Top 10&lt;/em&gt; threats.
Here we go through 6th to 10th places in the list.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>OWASP Top 10 in Mutillidae (Part1)</title>
      <link>http://mislusnys.github.io/post/2015-02-03-owasp-top-10-in-mutillidae/</link>
      <pubDate>Tue, 03 Feb 2015 10:48:16 +0000</pubDate>
      
      <guid>http://mislusnys.github.io/post/2015-02-03-owasp-top-10-in-mutillidae/</guid>
      <description>&lt;p&gt;&lt;em&gt;OWASP Mutillidae II&lt;/em&gt; is a free, open source, deliberately vulnerable web-application providing a target for web-security enthusiast. It features many vulnerabilities and challenges.
Contains at least one vulnerability for each of the &lt;em&gt;OWASP Top Ten&lt;/em&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Exploring Damn Vulnerable Web Application</title>
      <link>http://mislusnys.github.io/post/2015-02-02-damn-vulnerable-web-application/</link>
      <pubDate>Mon, 02 Feb 2015 08:40:17 +0000</pubDate>
      
      <guid>http://mislusnys.github.io/post/2015-02-02-damn-vulnerable-web-application/</guid>
      <description>&lt;p&gt;Damn Vulnerable Web App (DVWA) is a PHP/MySQL web application that is damn vulnerable. Its main goals are to be an aid for security professionals to test their skills and tools in a legal environment, help web developers better understand the processes of securing web applications and aid teachers/students to teach/learn web application security in a class room environment.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>